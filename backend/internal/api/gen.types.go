// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ParticipationRoleEnum.
const (
	Creator   ParticipationRoleEnum = "creator"
	Performer ParticipationRoleEnum = "performer"
)

// Defines values for StageTypeEnum.
const (
	Battle StageTypeEnum = "battle"
	Simple StageTypeEnum = "simple"
)

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	UserId *string `json:"userId,omitempty"`
	Token  *string `json:"token,omitempty"`
}

// Participation defines model for Participation.
type Participation struct {
	Id     string                `gorm:"primaryKey" json:"id"`
	Role   ParticipationRoleEnum `json:"role"`
	Slam   *Slam                 `gorm:"foreignKey:SlamId;references:Id" json:"slam,omitempty"`
	SlamId *string               `json:"slamId,omitempty"`
	Stages *[]Stage              `gorm:"many2many:performances" json:"stages,omitempty"`
	User   *User                 `gorm:"foreignKey:UserId;references:Id" json:"user,omitempty"`
	UserId *string               `json:"userId,omitempty"`
}

// ParticipationRequest defines model for ParticipationRequest.
type ParticipationRequest struct {
	UserId *string                `json:"userId,omitempty"`
	Role   *ParticipationRoleEnum `json:"role,omitempty"`
}

// ParticipationRoleEnum defines model for ParticipationRoleEnum.
type ParticipationRoleEnum string

// ParticipationUpdateRequest defines model for ParticipationUpdateRequest.
type ParticipationUpdateRequest struct {
	Role *ParticipationRoleEnum `json:"role,omitempty"`
}

// Performance defines model for Performance.
type Performance struct {
	Id                    string         `gorm:"primaryKey" json:"id"`
	Participation         *Participation `gorm:"foreignKey:ParticipationId;references:Id" json:"participation,omitempty"`
	ParticipationId       string         `json:"participationId"`
	Stage                 *Stage         `gorm:"foreignKey:StageId;references:Id" json:"stage,omitempty"`
	StageId               string         `json:"stageId"`
	OpponentPerformanceId *string        `json:"opponentPerformanceId"`
	Details               *string        `json:"details,omitempty"`
}

// PerformanceRequest defines model for PerformanceRequest.
type PerformanceRequest struct {
	ParticipationId       string  `json:"participationId"`
	OpponentPerformanceId *string `json:"opponentPerformanceId"`
	Details               string  `json:"details"`
}

// RegisterRequest defines model for RegisterRequest.
type RegisterRequest struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

// Slam defines model for Slam.
type Slam struct {
	Id          string   `gorm:"primaryKey" json:"id"`
	Title       string   `json:"title"`
	Description *string  `json:"description,omitempty"`
	Location    *string  `json:"location,omitempty"`
	Public      bool     `json:"public"`
	Stages      *[]Stage `gorm:"foreignKey:SlamId" json:"stages,omitempty"`
	Users       *[]User  `gorm:"many2many:participations" json:"users,omitempty"`
}

// SlamRequest defines model for SlamRequest.
type SlamRequest struct {
	Title       string  `json:"title"`
	Description *string `json:"description,omitempty"`
	Location    *string `json:"location,omitempty"`
	Public      bool    `json:"public"`
}

// Stage defines model for Stage.
type Stage struct {
	Id             string           `gorm:"primaryKey" json:"id"`
	SlamId         string           `json:"slamId"`
	StageType      StageTypeEnum    `json:"stageType"`
	Round          *int             `json:"round,omitempty"`
	Details        *string          `json:"details,omitempty"`
	Participations *[]Participation `gorm:"many2many:performances" json:"participations,omitempty"`
}

// StageRequest defines model for StageRequest.
type StageRequest struct {
	Details   *string       `json:"details,omitempty"`
	Round     *int          `json:"round,omitempty"`
	StageType StageTypeEnum `json:"stageType"`
}

// StageTypeEnum defines model for StageTypeEnum.
type StageTypeEnum string

// User defines model for User.
type User struct {
	Id    string `gorm:"primaryKey" json:"id"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

// UserRequest defines model for UserRequest.
type UserRequest struct {
	Email *string `json:"email,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// Vote defines model for Vote.
type Vote struct {
	Id                string  `gorm:"primaryKey" json:"id"`
	PerformanceId     string  `json:"performanceId"`
	UserIp            *string `json:"userIp,omitempty"`
	DeviceFingerprint *string `json:"deviceFingerprint,omitempty"`
}

// VoteRequest defines model for VoteRequest.
type VoteRequest struct {
	DeviceFingerprint string `json:"deviceFingerprint"`
}

// PutStagesStageIDPerformancesJSONBody defines parameters for PutStagesStageIDPerformances.
type PutStagesStageIDPerformancesJSONBody = []string

// PostAuthLoginJSONRequestBody defines body for PostAuthLogin for application/json ContentType.
type PostAuthLoginJSONRequestBody = LoginRequest

// PostAuthRegisterJSONRequestBody defines body for PostAuthRegister for application/json ContentType.
type PostAuthRegisterJSONRequestBody = RegisterRequest

// PostParticipationsSlamsSlamIDUsersJSONRequestBody defines body for PostParticipationsSlamsSlamIDUsers for application/json ContentType.
type PostParticipationsSlamsSlamIDUsersJSONRequestBody = ParticipationRequest

// PutParticipationsSlamsSlamIDUsersUserIDJSONRequestBody defines body for PutParticipationsSlamsSlamIDUsersUserID for application/json ContentType.
type PutParticipationsSlamsSlamIDUsersUserIDJSONRequestBody = ParticipationUpdateRequest

// PutPerformancesPerformanceIDJSONRequestBody defines body for PutPerformancesPerformanceID for application/json ContentType.
type PutPerformancesPerformanceIDJSONRequestBody = PerformanceRequest

// PostPerformancesPerformanceIDVotesJSONRequestBody defines body for PostPerformancesPerformanceIDVotes for application/json ContentType.
type PostPerformancesPerformanceIDVotesJSONRequestBody = VoteRequest

// PostSlamsJSONRequestBody defines body for PostSlams for application/json ContentType.
type PostSlamsJSONRequestBody = SlamRequest

// PutSlamsSlamIDJSONRequestBody defines body for PutSlamsSlamID for application/json ContentType.
type PutSlamsSlamIDJSONRequestBody = SlamRequest

// PostSlamsSlamIDStagesJSONRequestBody defines body for PostSlamsSlamIDStages for application/json ContentType.
type PostSlamsSlamIDStagesJSONRequestBody = StageRequest

// PutStagesStageIDJSONRequestBody defines body for PutStagesStageID for application/json ContentType.
type PutStagesStageIDJSONRequestBody = StageRequest

// PostStagesStageIDPerformancesJSONRequestBody defines body for PostStagesStageIDPerformances for application/json ContentType.
type PostStagesStageIDPerformancesJSONRequestBody = PerformanceRequest

// PutStagesStageIDPerformancesJSONRequestBody defines body for PutStagesStageIDPerformances for application/json ContentType.
type PutStagesStageIDPerformancesJSONRequestBody = PutStagesStageIDPerformancesJSONBody

// PutUsersUserIDJSONRequestBody defines body for PutUsersUserID for application/json ContentType.
type PutUsersUserIDJSONRequestBody = UserRequest
